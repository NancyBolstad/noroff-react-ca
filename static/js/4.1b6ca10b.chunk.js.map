{"version":3,"sources":["components/ContactForm/styles.tsx","util/contactSchema.tsx","components/ContactForm/index.tsx","pages/Contact/index.tsx"],"names":["Form","styled","form","props","theme","spacing","s","Label","label","createFontStyles","fonts","b2","StyledLabelText","span","colors","primary","secondary","StyledInput","input","background","primaryVariant","b1","StyledTextArea","textarea","ErrorMessage","b3","error","contactSchema","yup","shape","firstName","required","min","lastName","email","message","ContactForm","useForm","validationSchema","handleSubmit","register","errors","history","useHistory","Typography","element","variant","content","isPrimaryColor","onSubmit","push","type","name","placeholder","ref","Button","size","Contact","MainContent"],"mappings":"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","file":"static/js/4.1b6ca10b.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport createFontStyles from '../../util/createFontStyles';\n\nexport const Form = styled.form`\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  padding: ${props => props.theme.spacing.s}rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n\n  button {\n    margin-top: ${props => props.theme.spacing.s}rem;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const Label = styled.label`\n  ${props => createFontStyles(props.theme.fonts.b2)};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: ${props => props.theme.spacing.s}rem 0;\n  width: 100%;\n`;\n\nexport const StyledLabelText = styled.span`\n  color: ${props => props.theme.colors.primary};\n  height: 40px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  ${props => createFontStyles(props.theme.fonts.b2)};\n\n  span {\n    color: ${props => props.theme.colors.secondary};\n    margin-left: 0.25rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  height: 50px;\n  width: 100%;\n  background-color: ${props => props.theme.colors.background};\n  border: 1px solid ${props => props.theme.colors.primaryVariant};\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n  padding: 0 20px;\n  outline: none;\n  transition: border-color 0.1s ease-in-out;\n  ${props => createFontStyles(props.theme.fonts.b1)};\n  color: ${props => props.theme.colors.primaryVariant};\n\n  &::placeholder {\n    color: ${props => props.theme.colors.primaryVariant};\n  }\n  &:active,\n  &:focus {\n    border-bottom: 2px solid ${props => props.theme.colors.secondary};\n  }\n  &:disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n  &:placeholder-shown {\n    border: 1px solid ${props => props.theme.colors.primaryVariant};\n  }\n`;\n\nexport const StyledTextArea = styled.textarea`\n  height: 50px;\n  height: 180px;\n  width: 100%;\n  background-color: ${props => props.theme.colors.background};\n  border: 1px solid ${props => props.theme.colors.primaryVariant};\n  border-bottom: 2px solid ${props => props.theme.colors.primary};\n  padding: 10px 20px;\n  outline: none;\n  transition: border-color 0.1s ease-in-out;\n  ${props => createFontStyles(props.theme.fonts.b1)};\n  color: ${props => props.theme.colors.primaryVariant};\n\n  &::placeholder {\n    color: ${props => props.theme.colors.primaryVariant};\n  }\n  &:active,\n  &:focus {\n    border-bottom: 2px solid ${props => props.theme.colors.secondary};\n  }\n  &:disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n  &:placeholder-shown {\n    border: 1px solid ${props => props.theme.colors.primaryVariant};\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  ${props => createFontStyles(props.theme.fonts.b3)};\n  text-transform: capitalize;\n  text-align: left;\n  color: ${props => props.theme.colors.error};\n`;\n","import * as yup from 'yup';\n\nconst contactSchema: yup.ObjectSchema = yup.object().shape({\n  firstName: yup.string().required().min(2),\n  lastName:yup.string().required().min(2),\n  email:yup.string().required().email(),\n  message: yup.string().required().min(10),\n});\n\nexport default contactSchema;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { Form, StyledInput, Label, StyledLabelText, StyledTextArea, ErrorMessage } from './styles';\nimport Button from '../Button';\nimport Typography from '../Typography';\nimport contactSchema from '../../util/contactSchema';\n\ninterface Props {}\n\nconst ContactForm: React.FC<Props> = () => {\n  const { handleSubmit, register, errors } = useForm({\n    validationSchema: contactSchema,\n  });\n\n  let history = useHistory();\n\n  const onSubmit = () => {\n    history.push('/success');\n  };\n\n  return (\n    <>\n      <Typography element=\"h1\" variant=\"h1\" content=\"Contact Us\" isPrimaryColor />\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          <StyledLabelText>\n            First Name <span>*</span>\n          </StyledLabelText>\n          <StyledInput\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"Your first name\"\n            ref={register}\n            required\n          />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.firstName && <ErrorMessage>{errors.firstName.message}</ErrorMessage>}\n        <Label>\n          <StyledLabelText>\n            Last Name <span>*</span>\n          </StyledLabelText>\n          <StyledInput\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Your last name\"\n            ref={register}\n            required\n          />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.lastName && <ErrorMessage>{errors.lastName.message}</ErrorMessage>}\n        <Label>\n          <StyledLabelText>\n            Email <span>*</span>\n          </StyledLabelText>\n          <StyledInput type=\"email\" name=\"email\" placeholder=\"Your email\" ref={register} required />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.email && <ErrorMessage>{errors.email.message}</ErrorMessage>}\n        <Label>\n          <StyledLabelText>\n            Message <span>*</span>\n          </StyledLabelText>\n          <StyledTextArea name=\"message\" placeholder=\"Your message\" ref={register} />\n        </Label>\n        {/* \n      // @ts-ignore */\n        errors.message && <ErrorMessage>{errors.message.message}</ErrorMessage>}\n        <Button size=\"large\" variant=\"primary\" type=\"submit\">\n          Send\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import * as React from 'react';\nimport MainContent from '../../components/MainContent';\nimport ContactForm from '../../components/ContactForm';\n\ninterface Props {}\n\nexport const Contact: React.FunctionComponent<Props> = () => {\n  return (\n    <>\n      <MainContent>\n        <ContactForm />\n      </MainContent>\n    </>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}